import{v as T,_ as $}from"./SurveyJsWrapper.vue_vue_type_script_setup_true_lang.0e3fa3cf.js";import{_ as F,o as S,c as U,p as H,d as M,e as _,Q as N,R as O,S as K,T as j,f as q,v as z,g as c,s as m,U as J,x as Q,i as x,h as W,q as X,k as L,y as Z,z as ee}from"./index.911cae79.js";import{u as te}from"./surveyStore.851eeb7d.js";import{u as ae}from"./participantStore.b0ba6114.js";import{l as oe,s as se,c as re}from"./surveyStorage.34c3760f.js";import"./storeHelpers.da90a6e3.js";const ne="/assets/complete.da7ee872.svg";const ue={},V=o=>(H("data-v-2871fe08"),o=o(),M(),o),ie={class:"survey-complete-page"},ce=V(()=>_("img",{src:ne,alt:"Complete",draggable:"false"},null,-1)),de=V(()=>_("div",{class:"scp-text"},[_("h4",null,"Thank you for completing this survey"),_("h5",null,"Please don't close this browser tab, we're redirecting you back to your surveys")],-1)),le=[ce,de];function pe(o,t){return S(),U("article",ie,le)}const ve=F(ue,[["render",pe],["__scopeId","data-v-2871fe08"]]);async function R(o){const t=new URL("submissions",K),n=await j(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!n.ok){const r=`An error has occured: ${n.status}`;throw console.error(n),new Error(r)}}async function ye(o,t,d){const n=N(),s=O().getCurrentOffsetTime().toISOString(),i={id:T(),payloadType:"SURVEY_RESPONSE",payload:{type:"SURVEY_RESPONSE",surveyResponse:{surveyName:t.name,surveyVersion:t.version,surveyType:t.surveyType,interventionId:t.interventionId,recordedAt:s,surveyResponse:d}},experimentId:o._embedded.trial.experiment.id,participantId:o.id,clientInfo:n,metadata:"",initiatedAt:s,submittedAt:s,protocolEntryId:t.id,trialId:o._embedded.trial.id};return R(i)}async function me(o,t,d){const n=N(),s=O().getCurrentOffsetTime().toISOString(),i={id:T(),payloadType:"EVENT_LOG",payload:{type:"EVENT_LOG",eventLogs:d.map(u=>({event:u,recordedAt:s}))},experimentId:o._embedded.trial.experiment.id,participantId:o.id,clientInfo:n,metadata:"",initiatedAt:s,submittedAt:s,protocolEntryId:t,trialId:o._embedded.trial.id};return R(i)}const _e={key:0},Pe=q({__name:"UserSurveyView",props:{surveyId:null},setup(o){const t=o,{user:d}=ee(),n=te(),r=z(),s=ae(),i=Z(),u=c(()=>{var e,a;return(a=(e=d.value)==null?void 0:e.user_metadata.participantId)!=null?a:""}),p=c(()=>s.getCachedParticipant(u.value)),A=c(()=>s.getCachedParticipantSurveys(u.value)),h=c(()=>{var e;return(e=A.value)==null?void 0:e.find(a=>a.id===t.surveyId)}),v=c(()=>{var e;return(e=h.value)==null?void 0:e.survey}),D=c(()=>!!(p.value&&v.value)),f=m(),I=m(),E=m(),g=c(()=>`userSurvey:${t.surveyId}`),P=m(!1);async function b(e=!1){if(await Promise.all([s.cacheParticipant(u.value),s.cacheParticipantSurveys(u.value,e),s.cacheParticipantProtocolEntries(u.value,e)]),!v.value)throw new Error(`Could not find the survey: ${t.surveyId}`)}J(async()=>{const e=oe(g.value);f.value=e.oldData,I.value=e.oldPageIndex;try{r.openLoadingOverlay(),await b(!0)}catch(a){console.error("Unable to download participant info",a),i.push({path:"/survey-not-found"})}finally{r.closeLoadingOverlay()}});function k(e){r.setPageCount(e.pageCount),r.setShowProgressBar(!0),w(e.currentPageNo,null,e.currentPage.name)}Q(()=>{r.setShowProgressBar(!1)});function w(e,a,l){if(r.setPageIndex(e),r.setPageTitle(l),E.value!==e){E.value=e;const y=[];a===null?y.push({event_type:f.value?"CONTINUE_SURVEY":"BEGIN_SURVEY",surveyId:t.surveyId}):y.push({event_type:"FINISH_SURVEY_PAGE",page_index:a,surveyId:t.surveyId}),y.push({event_type:"OPEN_SURVEY_PAGE",page_index:e,surveyId:t.surveyId}),C(...y)}}function B(e,a){se(g.value,e,a)}function Y(e){r.setHelpKey(e)}async function G(e,a){if(!D.value)throw new Error("On complete shouldn't trigger before we're loaded");P.value=!0;try{await Promise.all([ye(p.value,h.value,e),C({event_type:"FINISH_SURVEY_PAGE",page_index:a,surveyId:t.surveyId},{event_type:"COMPLETE_SURVEY",surveyId:t.surveyId})]),n.completedSurveys[t.surveyId]=!0,re(g.value),r.setShowProgressBar(!1),await new Promise(l=>setTimeout(l,2e3)),i.push({path:"/user-home"})}catch(l){console.error("Unable to submit survey",l),i.push({path:"/error-page"})}}async function C(...e){await b();const a=await s.getEventLogProtocolId(u.value);if(!p.value||!a)throw new Error("Unable to post event log: participant or eventLogProtocolId is null");me(p.value,a,e)}return(e,a)=>x(v)?(S(),U("div",_e,[W($,{"survey-data":x(v),"initial-state":f.value,"initial-page-idx":I.value,onComplete:G,onLoaded:k,onPageChanged:w,onPartialSend:B,onHelp:Y},null,8,["survey-data","initial-state","initial-page-idx"]),P.value?(S(),X(ve,{key:0})):L("",!0)])):L("",!0)}});export{Pe as default};
