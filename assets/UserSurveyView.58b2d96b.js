import{B as R,C as k,E as B,d as L,m as V,e as c,l as w,D as A,q as N,g as U,k as $,c as H,v as j,s as F,o as x}from"./index.05a7dd6d.js";import{_ as K}from"./SurveyJsWrapper.vue_vue_type_script_setup_true_lang.b444c56c.js";import{u as Y}from"./surveyStore.38b08d58.js";import{u as q}from"./participantStore.c09e18d1.js";import{l as z,c as J,s as M}from"./surveyStorage.34c3760f.js";import"./storeHelpers.62036978.js";let m;const W=new Uint8Array(16);function G(){if(!m&&(m=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!m))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return m(W)}const n=[];for(let e=0;e<256;++e)n.push((e+256).toString(16).slice(1));function Q(e,t=0){return(n[e[t+0]]+n[e[t+1]]+n[e[t+2]]+n[e[t+3]]+"-"+n[e[t+4]]+n[e[t+5]]+"-"+n[e[t+6]]+n[e[t+7]]+"-"+n[e[t+8]]+n[e[t+9]]+"-"+n[e[t+10]]+n[e[t+11]]+n[e[t+12]]+n[e[t+13]]+n[e[t+14]]+n[e[t+15]]).toLowerCase()}const X=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),C={randomUUID:X};function Z(e,t,u){if(C.randomUUID&&!t&&!e)return C.randomUUID();e=e||{};const o=e.random||(e.rng||G)();if(o[6]=o[6]&15|64,o[8]=o[8]&63|128,t){u=u||0;for(let s=0;s<16;++s)t[u+s]=o[s];return t}return Q(o)}async function ee(e,t){const u=new URL("submissions",B),o={"Content-Type":"application/json"};t&&(o.Authorization=`Bearer ${t}`);const s=await fetch(u,{method:"POST",headers:o,body:JSON.stringify(e)});if(!s.ok){const d=`An error has occured: ${s.status}`;throw console.error(s),new Error(d)}}async function te(e,t,u,o){const s=R(),i=k().getCurrentOffsetTime().toISOString(),l={id:Z(),payloadType:"SURVEY_RESPONSE",payload:{type:"SURVEY_RESPONSE",surveyResponse:{surveyName:t.name,surveyVersion:t.version,surveyType:t.surveyType,interventionId:t.interventionId,recordedAt:i,surveyResponse:u}},experimentId:e._embedded.trial.experiment.id,participantId:e.id,clientInfo:s,metadata:"",initiatedAt:i,submittedAt:i,protocolEntryId:t.id,trialId:e._embedded.trial.id};return ee(l,o)}const ae={key:1},ce=L({__name:"UserSurveyView",props:{surveyId:null},setup(e){const t=e,{user:u,getAccessTokenSilently:o}=j(),s=u,d=Y(),i=V(),l=q(),g=F(),p=c(()=>s.value.user_metadata.participantId),S=c(()=>l.getCachedParticipant(p.value)),_=c(()=>l.getCachedParticipantSurveys(p.value)),h=c(()=>{var a;return(a=_.value)==null?void 0:a.find(r=>r.id===t.surveyId)}),y=c(()=>{var a;return(a=h.value)==null?void 0:a.survey}),D=c(()=>!!(S.value&&y.value)),P=w(),I=w(),v=c(()=>`userSurvey:${t.surveyId}`);A(async()=>{const a=z(v.value);P.value=a.oldData,I.value=a.oldPageIndex;try{const r=await o();await Promise.all([l.cacheParticipant(p.value,r),l.cacheParticipantSurveys(p.value,r,!0)])}catch(r){console.error("Unable to download participant info",r),g.push({path:"/error-page"})}});async function b(a){if(!D.value)throw new Error("On complete shouldn't trigger before we're loaded");const r=await o();await te(S.value,h.value,a,r),d.setSurveyCompleted(!0),d.completedSurveys[t.surveyId]=!0,J(v.value),g.push({path:"/user-home"})}function E(a){d.setSurveyCompleted(!1),i.setPageCount(a.pageCount),i.setPageTitle(a.currentPage.name),i.setPageIndex(a.currentPageNo),i.setShowProgressBar(!0)}N(()=>{i.setShowProgressBar(!1)});function f(a,r){i.setPageIndex(a),i.setPageTitle(r)}function T(a,r){M(v.value,a,r)}function O(a){i.setHelpKey(a)}return(a,r)=>U(y)?(x(),$(K,{key:0,"survey-data":U(y),"initial-state":P.value,"initial-page-idx":I.value,onOnComplete:b,onOnLoaded:E,onOnPageChanged:f,onOnPartialSend:T,onHelp:O},null,8,["survey-data","initial-state","initial-page-idx"])):(x(),H("div",ae,"Please Wait"))}});export{ce as default};
