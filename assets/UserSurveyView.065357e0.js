import{_ as T}from"./SurveyJsWrapper.vue_vue_type_script_setup_true_lang.df13358e.js";import{_ as Y,o as g,c as b,p as $,b as A,e as d,f as F,y as G,w as H,h as s,x as p,Q as M,B as K,k as C,j,v as Q,m as L,C as q,R as z,S as J,D as W}from"./index.64a21f15.js";import{u as X}from"./surveyStore.a210b44b.js";import{l as Z,s as ee,c as te}from"./surveyStorage.34c3760f.js";const ae="/assets/complete.da7ee872.svg";const oe={},x=r=>($("data-v-2871fe08"),r=r(),A(),r),se={class:"survey-complete-page"},re=x(()=>d("img",{src:ae,alt:"Complete",draggable:"false"},null,-1)),ne=x(()=>d("div",{class:"scp-text"},[d("h4",null,"Thank you for completing this survey"),d("h5",null,"Please don't close this browser tab, we're redirecting you back to your surveys")],-1)),ue=[re,ne];function ce(r,a){return g(),b("article",se,ue)}const le=Y(oe,[["render",ce],["__scopeId","data-v-2871fe08"]]),ie={key:0},_e=F({__name:"UserSurveyView",props:{surveyId:null},setup(r){const a=r,{user:U}=W(),B=X(),o=G(),n=H(),y=q(),u=s(()=>{var e,t;return(t=(e=U.value)==null?void 0:e.user_metadata.participantId)!=null?t:""}),l=s(()=>n.getCachedParticipant(u.value)),N=s(()=>n.getCachedParticipantSurveys(u.value)),m=s(()=>{var e;return(e=N.value)==null?void 0:e.find(t=>t.id===a.surveyId)}),i=s(()=>{var e;return(e=m.value)==null?void 0:e.survey}),V=s(()=>!!(l.value&&i.value)),_=p(),h=p(),S=p(),f=s(()=>`userSurvey:${a.surveyId}`),I=p(!1);async function P(e=!1){if(await Promise.all([n.cacheParticipant(u.value),n.cacheParticipantSurveys(u.value,e),n.cacheParticipantProtocolEntries(u.value,e)]),!i.value)throw new Error(`Could not find the survey: ${a.surveyId}`)}M(async()=>{const e=Z(f.value);_.value=e.oldData,h.value=e.oldPageIndex;try{o.openLoadingOverlay(),await P(!0)}catch(t){console.error("Unable to download participant info",t),y.push({path:"/survey-not-found"})}finally{o.closeLoadingOverlay()}});function k(e){o.setPageCount(e.pageCount),o.setShowProgressBar(!0),E(e.currentPageNo,null,e.currentPage.name)}K(()=>{o.setShowProgressBar(!1)});function E(e,t,c){if(o.setPageIndex(e),o.setPageTitle(c),S.value!==e){S.value=e;const v=[];t===null?v.push({event_type:_.value?"CONTINUE_SURVEY":"BEGIN_SURVEY",surveyId:a.surveyId}):v.push({event_type:"FINISH_SURVEY_PAGE",page_index:t,surveyId:a.surveyId}),v.push({event_type:"OPEN_SURVEY_PAGE",page_index:e,surveyId:a.surveyId}),w(...v)}}function R(e,t){ee(f.value,e,t)}function D(e){o.setHelpKey(e)}async function O(e,t){if(!V.value)throw new Error("On complete shouldn't trigger before we're loaded");I.value=!0;try{await Promise.all([z(l.value,m.value,e),w({event_type:"FINISH_SURVEY_PAGE",page_index:t,surveyId:a.surveyId},{event_type:"COMPLETE_SURVEY",surveyId:a.surveyId})]),B.completedSurveys[a.surveyId]=!0,te(f.value),o.setShowProgressBar(!1),await new Promise(c=>setTimeout(c,2e3)),y.push({path:"/user-home"})}catch(c){console.error("Unable to submit survey",c),y.push({path:"/error-page"})}}async function w(...e){await P();const t=await n.getEventLogProtocolId(u.value);if(!l.value||!t)throw new Error("Unable to post event log: participant or eventLogProtocolId is null");J(l.value,t,e)}return(e,t)=>C(i)?(g(),b("div",ie,[j(T,{"survey-data":C(i),"initial-state":_.value,"initial-page-idx":h.value,onComplete:O,onLoaded:k,onPageChanged:E,onPartialSend:R,onHelp:D},null,8,["survey-data","initial-state","initial-page-idx"]),I.value?(g(),Q(le,{key:0})):L("",!0)])):L("",!0)}});export{_e as default};
